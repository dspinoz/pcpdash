extends container
block container

  script(type='text/javascript').
    $(document).ready(function(){
    
      $('#foo').on('click',function(ev){
        ev.preventDefault();
        //alert(ev);
        $.ajax({
          url: '/api/v1/add/statsd/foo/c/1',
          type: 'post'
        });
      });
      
      $('#bar').on('click',function(ev){
        ev.preventDefault();
        $.ajax({
          url: '/api/v1/add/statsd/bar/g/+1',
          type: 'post'
        });
      });
      
      $('#baz').on('click',function(ev){
        ev.preventDefault();
        $.ajax({
          url: '/api/v1/add/statsd/baz/s/1',
          type: 'post'
        });
      });
    });

  p Submit events via statsd and retrieve them via cube

  .panel.panel-default
    .panel-heading
      h3.panel-title Counters
    .panel-body
      .btn-group
          button#foo.btn.btn-default foo
          
  .panel.panel-default
    .panel-heading
      h3.panel-title Gauges
    .panel-body
      .btn-group
          button#bar.btn.btn-default bar
          
  .panel.panel-default
    .panel-heading
      h3.panel-title Sets
    .panel-body
      .btn-group
          button#baz.btn.btn-default baz

  .panel.panel-default
    .panel-heading Cube Events
    .panel-body
      #metric
  
  script(type='text/javascript').

    var dateFormat = d3.time.format("%c");

    // TODO update using web sockets
    function updateData() {
      d3.json("/event?expression=statsd(*)&limit=10", function(err,json) {
        if (err)
        {
          d3.select('#metric').html('<pre>ERROR: '+JSON.stringify(err, false, ' ')+'</pre>');
          return;
        }
        
        json.reverse();
        
        var m = d3.select('#metric');
        
        var d = m.selectAll('div.input-group')
                  .data(json);
        
        d.exit()
          .remove();

        d.enter()
          .append('div')
          .attr('class', 'input-group');

        d.html(function(d){
        
          var str = dateFormat(new Date(d.time)) + ' d';
          
          var o = d.data;
          while (o)
          {
            
            if (typeof o !== 'object')
            {
              // last property
              str += ' = ' + o;
              break;
            }
          
            var keys = Object.keys(o);
            
            if (!keys)
              break;
              
            str += '.' + keys[0];
            o = o[keys[0]];
          }
        
        
          return '<span class="input-group-addon">' + str + '</span>';
        });

      });
    }

    setInterval(updateData, 5000);
    updateData();
